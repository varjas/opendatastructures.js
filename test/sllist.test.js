const ods = require('../ods.js')


// Test SLList data structure
test('SLList push', () => {
	let l = new ods.SLList()
	expect(l.length).toBe(0)
	expect(l.push(0)).toBe(0)
	expect(l.head.value).toBe(0)
	expect(l.tail.value).toBe(0)
	expect(l.length).toBe(1)
	expect(l.push(1)).toBe(1)
	expect(l.head.value).toBe(1)
	expect(l.tail.value).toBe(0)
	expect(l.length).toBe(2)
	expect(l.push(2)).toBe(2)
	expect(l.head.value).toBe(2)
	expect(l.tail.value).toBe(0)
	expect(l.length).toBe(3)
	expect(l.head.next.value).toBe(1)
	expect(l.head.next.next.value).toBe(0)
	expect(l.head.next.next.next).toBe(undefined)
})

test('SLList pop', () => {
	let l = new ods.SLList()
	expect(l.pop()).toBe(undefined)
	l.push(0)
	l.push(1)
	l.push(2)
	expect(l.head.value).toBe(2)
	expect(l.tail.value).toBe(0)
	expect(l.pop()).toBe(2)
	expect(l.head.value).toBe(1)
	expect(l.tail.value).toBe(0)
	expect(l.pop()).toBe(1)
	expect(l.head.value).toBe(0)
	expect(l.tail.value).toBe(0)
	expect(l.pop()).toBe(0)
	expect(l.head).toBe(undefined)
	expect(l.tail).toBe(undefined)
})

test('SLList remove', () => {
	let l = new ods.SLList()
	expect(l.remove()).toBe(undefined)
	l.push(0)
	l.push(1)
	l.push(2)
	expect(l.head.value).toBe(2)
	expect(l.tail.value).toBe(0)
	expect(l.remove()).toBe(2)
	expect(l.head.value).toBe(1)
	expect(l.tail.value).toBe(0)
	expect(l.remove()).toBe(1)
	expect(l.head.value).toBe(0)
	expect(l.tail.value).toBe(0)
	expect(l.remove()).toBe(0)
	expect(l.head).toBe(undefined)
	expect(l.tail).toBe(undefined)
})

test('SLList add', () => {
	let l = new ods.SLList()
	expect(l.add(0)).toBe(true)
	expect(l.head.value).toBe(0)
	expect(l.tail.value).toBe(0)
	expect(l.length).toBe(1)
	expect(l.add(1)).toBe(true)
	expect(l.head.value).toBe(0)
	expect(l.tail.value).toBe(1)
	expect(l.add(2)).toBe(true)
	expect(l.head.value).toBe(0)
	expect(l.tail.value).toBe(2)
	expect(l.length).toBe(3)
	expect(l.pop()).toBe(0)
	expect(l.pop()).toBe(1)
	expect(l.pop()).toBe(2)
})
