const ods = require('../ods.js')


// Test ArrayDeque data structure
test('ArrayDeque add', () => {
	let a = new ods.ArrayDeque()
	a.add(0,0)
	a.add(1,1)
	a.add(2,2)
	a.add(3,3)
	a.add(4,4)
	a.add(5,5)
	expect(a.array).toEqual([0,1,2,3,4,5,undefined,undefined])
	expect(a.length).toBe(6)
	expect(a.nextElement).toBe(0)
	console.log(a)
	a.add(2,6)
	console.log(a)
	a.add(2,7)
	console.log(a)
	a.add(2,8)
	console.log(a)
	a.add(2,9)
	a.add(2,10)
	expect(a.array).toEqual([0,1,2,2,2,3,4,5])
	expect(a.length).toBe(8)
	expect(a.nextElement).toBe(3)
})

test('ArrayDeque remove', () => {
	let a = new ods.ArrayDeque()
	a.add(0,0)
	a.add(1,1)
	a.add(2,2)
	expect(a.remove(1)).toEqual(1)
	expect(a.length).toBe(2)
	expect(a.remove(1)).toEqual(2)
	expect(a.remove(0)).toEqual(0)
})

test('ArrayDeque get', () => {
	let a = new ods.ArrayDeque()
	a.add(0,0)
	a.add(1,1)
	a.add(2,2)
	expect(a.get(1)).toEqual(1)
	expect(a.get(2)).toEqual(2)
	expect(a.get(0)).toEqual(0)
})

test('ArrayDeque set', () => {
	let a = new ods.ArrayDeque()
	a.add(0,0)
	a.add(1,1)
	a.add(2,2)
	expect(a.set(1, 3)).toEqual(1)
	expect(a.get(1)).toEqual(3)
	expect(a.set(0, 5)).toEqual(0)
	expect(a.get(0)).toEqual(5)
})
